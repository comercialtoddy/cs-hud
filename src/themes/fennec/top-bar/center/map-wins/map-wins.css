.map-wins {
	display: flex;
	align-items: center;
	justify-content: center;

	background: var(--top-bar-maps-fill);
	border-radius: 0.4rem;
	position: relative;
	transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
	overflow: hidden;
}

.map-wins::before {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: linear-gradient(
		45deg,
		rgba(255, 255, 255, 0.05),
		transparent 50%,
		rgba(255, 255, 255, 0.05)
	);
	opacity: 0;
	transition: opacity 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.map-wins::after {
	content: 'üèÖ';
	position: absolute;
	top: 50%;
	right: -35px;
	transform: translateY(-50%);
	font-size: 2rem;
	opacity: 0.1;
	transition: all 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
	z-index: -1;
}

.map-wins:hover {
	transform: translateY(-1px) scale(1.02);
	box-shadow: 
		0 4px 16px rgba(0, 0, 0, 0.2),
		inset 0 1px 2px rgba(255, 255, 255, 0.2);
}

.map-wins:hover::before {
	opacity: 1;
}

.map-wins:hover::after {
	right: -20px;
	opacity: 0.3;
	transform: translateY(-50%) rotate(15deg) scale(1.3);
}

.map-wins.--left {
	grid-area: map-wins-left;
	padding-left: 0.5rem;

	clip-path: polygon(-1% -1%, 101% -1%, 101% 101%, 0.85rem 101%);
	flex-direction: row-reverse;
}

.map-wins.--left::after {
	left: -35px;
	right: auto;
}

.map-wins.--left:hover::after {
	left: -20px;
	transform: translateY(-50%) rotate(-15deg) scale(1.3);
}

.map-wins.--right {
	grid-area: map-wins-right;
	padding-right: 0.5rem;

	clip-path: polygon(-1% -1%, 101% 0, calc(101% - 0.85rem) 101%, -1% 101%);
}

.map-wins .pip {
	width: 0.6rem;
	aspect-ratio: 1;
	border: 0.2rem solid;
	margin: 0.3rem;
	border-radius: 50%;
	position: relative;
	transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
	overflow: hidden;
}

.map-wins .pip::before {
	content: '';
	position: absolute;
	top: -2px;
	left: -2px;
	right: -2px;
	bottom: -2px;
	border-radius: 50%;
	background: conic-gradient(
		from 0deg,
		transparent,
		rgba(255, 255, 255, 0.3),
		transparent
	);
	opacity: 0;
	transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
	animation: pipRotate 3s linear infinite;
}

.map-wins:hover .pip {
	transform: scale(1.2);
}

.map-wins:hover .pip::before {
	opacity: 1;
}

.map-wins.--ct .pip {
	border-color: var(--counter-terrorists-border);
}

.map-wins.--ct .pip.--filled {
	background: var(--counter-terrorists-fill);
	position: relative;
}

.map-wins.--ct .pip.--filled::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	width: 4px;
	height: 4px;
	background: radial-gradient(
		circle,
		rgba(255, 255, 255, 0.8) 0%,
		transparent 70%
	);
	transform: translate(-50%, -50%);
	border-radius: 50%;
	animation: victoryPulse 2s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
}

.map-wins.--t .pip {
	border-color: var(--terrorists-border);
}

.map-wins.--t .pip.--filled {
	background: var(--terrorists-fill);
	position: relative;
}

.map-wins.--t .pip.--filled::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	width: 4px;
	height: 4px;
	background: radial-gradient(
		circle,
		rgba(255, 255, 255, 0.8) 0%,
		transparent 70%
	);
	transform: translate(-50%, -50%);
	border-radius: 50%;
	animation: victoryPulse 2s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
}

/* Anima√ß√µes especiais para vit√≥rias */
.map-wins.--victory-sequence {
	animation: victorySequence 2s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.map-wins.--match-win {
	animation: matchWin 3s cubic-bezier(0.4, 0.0, 0.2, 1);
}

@keyframes pipRotate {
	0% { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}

@keyframes victoryPulse {
	0%, 100% { 
		transform: translate(-50%, -50%) scale(1);
		opacity: 0.8;
	}
	50% { 
		transform: translate(-50%, -50%) scale(1.5);
		opacity: 1;
	}
}

@keyframes victorySequence {
	0% { 
		transform: scale(1);
		filter: brightness(1);
	}
	25% { 
		transform: scale(1.05);
		filter: brightness(1.2);
	}
	50% { 
		transform: scale(1.1);
		filter: brightness(1.4) hue-rotate(30deg);
	}
	75% { 
		transform: scale(1.05);
		filter: brightness(1.2);
	}
	100% { 
		transform: scale(1);
		filter: brightness(1);
	}
}

@keyframes matchWin {
	0% { 
		transform: scale(1);
		filter: brightness(1) saturate(1);
	}
	20% { 
		transform: scale(1.1);
		filter: brightness(1.5) saturate(1.5) hue-rotate(60deg);
	}
	40% { 
		transform: scale(1.15);
		filter: brightness(2) saturate(2) hue-rotate(120deg);
	}
	60% { 
		transform: scale(1.1);
		filter: brightness(1.5) saturate(1.5) hue-rotate(180deg);
	}
	80% { 
		transform: scale(1.05);
		filter: brightness(1.2) saturate(1.2) hue-rotate(240deg);
	}
	100% { 
		transform: scale(1);
		filter: brightness(1) saturate(1) hue-rotate(360deg);
	}
}
